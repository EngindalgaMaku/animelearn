// Seed 20 diverse achievements (badges)
// Run: npx ts-node prisma/seeds/badges-seed.ts
// If ts-node is not installed: npm i -D ts-node @types/node

import { PrismaClient } from "@prisma/client";

const prisma = new PrismaClient();

type SeedBadge = {
  name: string;
  title: string;
  description: string;
  icon: string;
  category: string;
  rarity: "common" | "rare" | "epic" | "legendary";
  color: string;
  condition: string; // legacy condition JSON: { type, target }
  conditionType:
    | "count"
    | "streak"
    | "milestone"
    | "time_based"
    | "combo"
    | "skill_mastery";
  targetValue: number;
  rewardDiamonds: number;
  rewardXp: number;
  rewardCardPack?: string | null;
  isActive: boolean;
  isHidden: boolean;
  sortOrder: number;
};

const seedBadges: SeedBadge[] = [
  {
    name: "first_lesson",
    title: "First Steps",
    description: "Complete your very first learning activity.",
    icon: "üéØ",
    category: "learning",
    rarity: "common",
    color: "#3B82F6",
    condition: JSON.stringify({ type: "first_lesson", target: 1 }),
    conditionType: "milestone",
    targetValue: 1,
    rewardDiamonds: 25,
    rewardXp: 50,
    isActive: true,
    isHidden: false,
    sortOrder: 1,
  },
  {
    name: "lessons_5_completed",
    title: "Apprentice",
    description: "Complete 5 learning activities.",
    icon: "üìò",
    category: "learning",
    rarity: "common",
    color: "#2563EB",
    condition: JSON.stringify({ type: "lessons_completed", target: 5 }),
    conditionType: "count",
    targetValue: 5,
    rewardDiamonds: 40,
    rewardXp: 80,
    isActive: true,
    isHidden: false,
    sortOrder: 2,
  },
  {
    name: "lessons_20_completed",
    title: "Scholar",
    description: "Complete 20 learning activities.",
    icon: "üéì",
    category: "learning",
    rarity: "rare",
    color: "#1D4ED8",
    condition: JSON.stringify({ type: "lessons_completed", target: 20 }),
    conditionType: "count",
    targetValue: 20,
    rewardDiamonds: 120,
    rewardXp: 200,
    isActive: true,
    isHidden: false,
    sortOrder: 3,
  },
  {
    name: "lessons_50_completed",
    title: "Master Learner",
    description: "Complete 50 learning activities.",
    icon: "üß†",
    category: "learning",
    rarity: "epic",
    color: "#4338CA",
    condition: JSON.stringify({ type: "lessons_completed", target: 50 }),
    conditionType: "count",
    targetValue: 50,
    rewardDiamonds: 300,
    rewardXp: 500,
    isActive: true,
    isHidden: false,
    sortOrder: 4,
  },
  {
    name: "quizzes_5_completed",
    title: "Quiz Novice",
    description: "Complete 5 quizzes.",
    icon: "üìù",
    category: "quiz",
    rarity: "common",
    color: "#10B981",
    condition: JSON.stringify({ type: "quizzes_completed", target: 5 }),
    conditionType: "count",
    targetValue: 5,
    rewardDiamonds: 30,
    rewardXp: 60,
    isActive: true,
    isHidden: false,
    sortOrder: 5,
  },
  {
    name: "quizzes_20_completed",
    title: "Quiz Challenger",
    description: "Complete 20 quizzes.",
    icon: "üèÜ",
    category: "quiz",
    rarity: "rare",
    color: "#059669",
    condition: JSON.stringify({ type: "quizzes_completed", target: 20 }),
    conditionType: "count",
    targetValue: 20,
    rewardDiamonds: 120,
    rewardXp: 220,
    isActive: true,
    isHidden: false,
    sortOrder: 6,
  },
  {
    name: "quiz_streak_5",
    title: "Hot Streak",
    description: "Achieve a streak of 5 correct answers.",
    icon: "üî•",
    category: "quiz",
    rarity: "rare",
    color: "#F59E0B",
    condition: JSON.stringify({ type: "quiz_streak", target: 5 }),
    conditionType: "streak",
    targetValue: 5,
    rewardDiamonds: 150,
    rewardXp: 250,
    isActive: true,
    isHidden: false,
    sortOrder: 7,
  },
  {
    name: "perfect_quizzes_3",
    title: "Perfectionist",
    description: "Finish 3 quizzes with all answers correct.",
    icon: "üíØ",
    category: "quiz",
    rarity: "epic",
    color: "#F97316",
    condition: JSON.stringify({ type: "perfect_quizzes", target: 3 }),
    conditionType: "milestone",
    targetValue: 3,
    rewardDiamonds: 200,
    rewardXp: 320,
    isActive: true,
    isHidden: false,
    sortOrder: 8,
  },
  {
    name: "fast_answers_20",
    title: "Quick Thinker",
    description: "Give 20 correct answers in under 5 seconds.",
    icon: "‚ö°",
    category: "quiz",
    rarity: "rare",
    color: "#0EA5E9",
    condition: JSON.stringify({ type: "fast_answers", target: 20 }),
    conditionType: "count",
    targetValue: 20,
    rewardDiamonds: 120,
    rewardXp: 200,
    isActive: true,
    isHidden: false,
    sortOrder: 9,
  },
  {
    name: "daily_quiz_sessions_3",
    title: "Weekend Grinder",
    description: "Complete 3 quizzes in a single day.",
    icon: "üìÜ",
    category: "engagement",
    rarity: "common",
    color: "#22C55E",
    condition: JSON.stringify({ type: "daily_quiz_sessions", target: 3 }),
    conditionType: "time_based",
    targetValue: 3,
    rewardDiamonds: 60,
    rewardXp: 100,
    isActive: true,
    isHidden: false,
    sortOrder: 10,
  },
  {
    name: "comeback_streak_3",
    title: "Comeback Kid",
    description: "After a mistake, get 3 consecutive correct answers.",
    icon: "‚ôªÔ∏è",
    category: "quiz",
    rarity: "rare",
    color: "#84CC16",
    condition: JSON.stringify({ type: "comeback_streak", target: 3 }),
    conditionType: "streak",
    targetValue: 3,
    rewardDiamonds: 140,
    rewardXp: 220,
    isActive: true,
    isHidden: false,
    sortOrder: 11,
  },
  {
    name: "cards_owned_10",
    title: "Collector",
    description: "Own 10 cards in your collection.",
    icon: "üÉè",
    category: "collection",
    rarity: "common",
    color: "#A855F7",
    condition: JSON.stringify({ type: "cards_owned", target: 10 }),
    conditionType: "count",
    targetValue: 10,
    rewardDiamonds: 80,
    rewardXp: 140,
    isActive: true,
    isHidden: false,
    sortOrder: 12,
  },
  {
    name: "cards_owned_50",
    title: "Curator",
    description: "Own 50 cards in your collection.",
    icon: "üóÇÔ∏è",
    category: "collection",
    rarity: "epic",
    color: "#7C3AED",
    condition: JSON.stringify({ type: "cards_owned", target: 50 }),
    conditionType: "count",
    targetValue: 50,
    rewardDiamonds: 250,
    rewardXp: 450,
    isActive: true,
    isHidden: false,
    sortOrder: 13,
  },
  {
    name: "login_streak_7",
    title: "Weekly Streak",
    description: "Log in for 7 consecutive days.",
    icon: "üìÖ",
    category: "engagement",
    rarity: "rare",
    color: "#EA580C",
    condition: JSON.stringify({ type: "login_streak", target: 7 }),
    conditionType: "streak",
    targetValue: 7,
    rewardDiamonds: 150,
    rewardXp: 240,
    isActive: true,
    isHidden: false,
    sortOrder: 14,
  },
  {
    name: "login_streak_30",
    title: "Monthly Streak",
    description: "Log in for 30 consecutive days.",
    icon: "üóìÔ∏è",
    category: "engagement",
    rarity: "legendary",
    color: "#C2410C",
    condition: JSON.stringify({ type: "login_streak", target: 30 }),
    conditionType: "streak",
    targetValue: 30,
    rewardDiamonds: 500,
    rewardXp: 800,
    isActive: true,
    isHidden: false,
    sortOrder: 15,
  },
  {
    name: "level_reached_5",
    title: "Level 5",
    description: "Reach account level 5.",
    icon: "üß©",
    category: "progress",
    rarity: "common",
    color: "#0EA5E9",
    condition: JSON.stringify({ type: "level_reached", target: 5 }),
    conditionType: "milestone",
    targetValue: 5,
    rewardDiamonds: 70,
    rewardXp: 120,
    isActive: true,
    isHidden: false,
    sortOrder: 16,
  },
  {
    name: "level_reached_10",
    title: "Level 10",
    description: "Reach account level 10.",
    icon: "üöÄ",
    category: "progress",
    rarity: "rare",
    color: "#0284C7",
    condition: JSON.stringify({ type: "level_reached", target: 10 }),
    conditionType: "milestone",
    targetValue: 10,
    rewardDiamonds: 180,
    rewardXp: 300,
    isActive: true,
    isHidden: false,
    sortOrder: 17,
  },
  {
    name: "diamonds_earned_1000",
    title: "Shiny!",
    description: "Earn a total of 1,000 diamonds.",
    icon: "üíé",
    category: "economy",
    rarity: "epic",
    color: "#3B82F6",
    condition: JSON.stringify({ type: "diamonds_earned", target: 1000 }),
    conditionType: "count",
    targetValue: 1000,
    rewardDiamonds: 300,
    rewardXp: 400,
    isActive: true,
    isHidden: false,
    sortOrder: 18,
  },
  {
    name: "code_submissions_20",
    title: "Code Monkey",
    description: "Submit code 20 times in Code Arena.",
    icon: "üíª",
    category: "learning",
    rarity: "rare",
    color: "#2563EB",
    condition: JSON.stringify({ type: "code_submissions", target: 20 }),
    conditionType: "count",
    targetValue: 20,
    rewardDiamonds: 160,
    rewardXp: 250,
    isActive: true,
    isHidden: false,
    sortOrder: 19,
  },
  {
    name: "perfect_score_5",
    title: "Flawless",
    description: "Achieve a perfect score (100) in 5 activities.",
    icon: "‚≠ê",
    category: "learning",
    rarity: "legendary",
    color: "#9333EA",
    condition: JSON.stringify({ type: "perfect_score", target: 5 }),
    conditionType: "milestone",
    targetValue: 5,
    rewardDiamonds: 600,
    rewardXp: 900,
    isActive: true,
    isHidden: false,
    sortOrder: 20,
  },
];

async function main() {
  console.log("üå± Seeding achievements (badges)...");
  let created = 0;

  for (const b of seedBadges) {
    await prisma.badge.upsert({
      where: { name: b.name },
      update: {
        title: b.title,
        description: b.description,
        icon: b.icon,
        category: b.category,
        rarity: b.rarity,
        color: b.color,
        condition: b.condition,
        conditionType: b.conditionType,
        targetValue: b.targetValue,
        rewardDiamonds: b.rewardDiamonds,
        rewardXp: b.rewardXp,
        rewardCardPack: b.rewardCardPack ?? null,
        isActive: b.isActive,
        isHidden: b.isHidden,
        sortOrder: b.sortOrder,
      },
      create: {
        ...b,
      },
    });
    created++;
    console.log(`  ‚úì ${b.title} (${b.name})`);
  }

  console.log(`‚úÖ Seed complete. Upserted ${created} achievements.`);
}

main()
  .catch((e) => {
    console.error("‚ùå Seed failed:", e);
    process.exitCode = 1;
  })
  .finally(async () => {
    await prisma.$disconnect();
  });
